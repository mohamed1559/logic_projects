library ieee;
use ieee.std_logic_1164.all;


entity clock is
port ( 

--pulses
clk,clr : in std_logic ;
--outputs
hours:   inout INTEGER range 0 to 24;
minutes: inout INTEGER range 0 to 60;
seconds: inout INTEGER range 0 to 60;
--intial inputs
h: in INTEGER range 0 to 24;
m: in INTEGER range 0 to 60;
s: in INTEGER range 0 to 60

);
end clock;

architecture Behavioral of clock is

begin
--hours<=h;
--minutes<=m;
--seconds<=s;

process(clk,clr)  

begin
if (clr='1') then --clr ='1' means i want to set the clock
hours<=h;
minutes<=m;
seconds<=s;
elsif(clk'event and clk='0') then --rising edge exist
--algorithm to follow
-- seconds should increase every edge while does not reach 60
-- if reached 60 then minutes increase by 1 and seconds =0
-- minutes should follow sequance till reach 60 then hours increase by 1 and minutes=0
-- hours follow the sequance till reach 24 then h=0
seconds <= seconds+ 1;
if(seconds = 59) then
seconds<=0;
minutes <= minutes + 1;
if(minutes = 59) then
hours <= hours + 1;
minutes <= 0;
if(hours = 23) then
hours <= 0;
end if;
end if;
end if;
end if;


end process;
end Behavioral;